name: Reusable Security Scan with Trivy

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
        description: "Name of the service to scan"
      dockerfile_path:
        required: true
        type: string
        description: "Path to the Dockerfile"
      context_path:
        required: true
        type: string
        description: "Build context path"
      severity:
        required: false
        type: string
        default: "CRITICAL,HIGH"
        description: "Severity levels to scan for"
      fail_on_severity:
        required: false
        type: string
        default: "CRITICAL"
        description: "Severity level that will cause the workflow to fail"
      scan_type:
        required: false
        type: string
        default: "fs,config"
        description: "Types of scans to perform (fs, config, secret)"
    secrets: inherit

jobs:
  trivy-security-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context_path }}
          file: ${{ inputs.dockerfile_path }}
          push: false
          tags: ${{ inputs.service_name }}:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner on filesystem
        if: contains(inputs.scan_type, 'fs')
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: ${{ inputs.context_path }}
          format: "sarif"
          output: "trivy-fs-results.sarif"
          severity: ${{ inputs.severity }}
          exit-code: "0"

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.service_name }}:scan
          format: "sarif"
          output: "trivy-image-results.sarif"
          severity: ${{ inputs.severity }}
          exit-code: "0"

      - name: Run Trivy configuration scanner
        if: contains(inputs.scan_type, 'config')
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: ${{ inputs.context_path }}
          format: "sarif"
          output: "trivy-config-results.sarif"
          severity: ${{ inputs.severity }}
          exit-code: "0"

      - name: Run Trivy secret scanner
        if: contains(inputs.scan_type, 'secret')
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: ${{ inputs.context_path }}
          scanners: "secret"
          format: "sarif"
          output: "trivy-secret-results.sarif"
          severity: ${{ inputs.severity }}
          exit-code: "0"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "."

      - name: Run Trivy scanner with fail condition
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.service_name }}:scan
          format: "table"
          severity: ${{ inputs.fail_on_severity }}
          exit-code: "1"

      - name: Generate security report
        if: always()
        run: |
          echo "# Security Scan Report for ${{ inputs.service_name }}" > security-report.md
          echo "" >> security-report.md
          echo "## Scan Summary" >> security-report.md
          echo "- **Service**: ${{ inputs.service_name }}" >> security-report.md
          echo "- **Scan Date**: $(date)" >> security-report.md
          echo "- **Severity Levels**: ${{ inputs.severity }}" >> security-report.md
          echo "- **Fail on Severity**: ${{ inputs.fail_on_severity }}" >> security-report.md
          echo "" >> security-report.md

          if [ -f "trivy-image-results.sarif" ]; then
            echo "## Image Scan Results" >> security-report.md
            echo "Image scan completed. Check the Security tab for detailed results." >> security-report.md
            echo "" >> security-report.md
          fi

          if [ -f "trivy-fs-results.sarif" ]; then
            echo "## Filesystem Scan Results" >> security-report.md
            echo "Filesystem scan completed. Check the Security tab for detailed results." >> security-report.md
            echo "" >> security-report.md
          fi

          if [ -f "trivy-config-results.sarif" ]; then
            echo "## Configuration Scan Results" >> security-report.md
            echo "Configuration scan completed. Check the Security tab for detailed results." >> security-report.md
            echo "" >> security-report.md
          fi

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ inputs.service_name }}
          path: security-report.md
          retention-days: 30

      - name: Comment PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('security-report.md')) {
              const report = fs.readFileSync('security-report.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            }
